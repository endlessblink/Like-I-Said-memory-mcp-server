{
  "permissions": {
    "allow": [
      "Bash(npm:*)",
      "Bash(pkill:*)",
      "Bash(rg:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(curl:*)",
      "Bash(lsof:*)",
      "Bash(ss:*)",
      "Bash(true)",
      "Bash(fuser:*)",
      "Bash(node:*)",
      "Bash(npx:*)",
      "Bash(hostname:*)",
      "Bash(ls:*)",
      "Bash(killall:*)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "Bash(git push:*)",
      "Bash(chmod:*)",
      "Bash(find:*)",
      "Bash(./install-universal.sh:*)",
      "Bash(bash:*)",
      "Bash(dos2unix:*)",
      "Bash(sed:*)",
      "Bash(cp:*)",
      "mcp__like-i-said-memory__list_memories",
      "mcp__like-i-said-memory__search_memories",
      "mcp__like-i-said-memory__add_memory",
      "mcp__like-i-said-memory__test_tool",
      "Bash(cat:*)",
      "mcp__firecrawl-mcp__firecrawl_scrape",
      "mcp__firecrawl-mcp__firecrawl_search",
      "mcp__like-i-said-v2__test_tool",
      "mcp__like-i-said-v2__add_memory",
      "mcp__like-i-said-v2__list_memories",
      "mcp__like-i-said-v2__search_memories",
      "mcp__like-i-said-v2__get_memory",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__playwright-mcp__browser_navigate",
      "Bash(mkdir:*)",
      "Bash(cmd.exe:*)",
      "Bash(jq:*)",
      "Bash(kill:*)",
      "mcp__like-i-said-v2__delete_memory",
      "mcp__claude-task-master__get_tasks",
      "Bash(mv:*)",
      "Bash(touch:*)",
      "Bash(source ~/.bashrc)",
      "Bash(if [ -n \"$USER\" ])",
      "Bash(then echo \"🎉 SUCCESS! New token works - authenticated as: $USER\")",
      "Bash(else echo \"❌ New token authentication failed\")",
      "Bash(fi)",
      "Bash(git pull:*)",
      "Bash(git reset:*)",
      "Bash(gh auth:*)",
      "Bash(git checkout:*)",
      "mcp__claude-task-master__add_task",
      "mcp__playwright-mcp__browser_install",
      "Bash(sudo apt-get:*)",
      "Bash(claude mcp:*)",
      "mcp__playwright-mcp__browser_close",
      "Bash(python3:*)",
      "Bash(timeout 30s npm publish --access public)",
      "Bash(timeout:*)",
      "Bash(# Start server in background and test file change detection\nnode server-markdown.js 2>&1 &\nSERVER_PID=$!\n\n# Wait for startup\nsleep 8\n\n# Create a test memory file to trigger backup\necho \"---\ntitle: Test Memory Auto Backup\nsummary: Testing automatic backup system\ncategory: test\ntags: [backup-test]\npriority: medium\n---\n\n# Test Memory\n\nThis is a test memory to verify automatic backup detection.\" > memories/default/test-backup-detection.md\n\n# Wait for backup to trigger\nsleep 8\n\n# Kill server\nkill $SERVER_PID 2>/dev/null || true\nwait $SERVER_PID 2>/dev/null || true)",
      "Bash(# Test that backup system auto-starts with NPM version\ntimeout 10s node server-markdown.js 2>&1 | head -15)",
      "Bash(# Simulate existing project\necho '{\n  \"name\": \"my-awesome-app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"My existing project\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\",\n    \"test\": \"jest\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.18.0\"\n  }\n}' > package.json\n\necho \"console.log('My existing app');\" > index.js\necho \"# My Awesome App\" > README.md\nmkdir src tests\necho \"This is my existing project\" > src/app.js)",
      "Bash(git rm:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "like-i-said-memory"
  ],
  "disabledMcpjsonServers": [
    "like-i-said-memory"
  ]
}